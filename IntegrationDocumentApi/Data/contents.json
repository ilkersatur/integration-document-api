[
  {
    "Id": 1,
    "SubmenuId": 1,
    "Text": "# 3D-Secure \u0130\u015Flemleri\n---\n**3D-Secure i\u015Flemler**, kart sahibinin kimli\u011Finin do\u011Frulanmas\u0131n\u0131 sa\u011Flayan bir g\u00FCvenlik protokol\u00FCd\u00FCr.  \nOnline al\u0131\u015Fveri\u015Flerde i\u015Flem s\u0131ras\u0131nda kullan\u0131c\u0131dan cep telefonuna gelen dinamik \u015Fifre ya da mobil onay istenir.  \nBu \u015Fifre ile i\u015Flem banka sisteminde do\u011Frulan\u0131r ve \u00F6deme tamamlan\u0131r.\n\n## 3D-Secure Modelleri\n---\n3D-Secure i\u015Flemlerinde 3 farkl\u0131 model desteklenmektedir:\n\n- **3D Modeli:** Do\u011Frulama ve provizyon ayr\u0131 ad\u0131mlard\u0131r, ikinci ad\u0131m\u0131 \u00FCye i\u015Fyeri tamamlar.\n- **3D Pay Modeli:** Do\u011Frulama ve provizyon ayn\u0131 ad\u0131mda tamamlan\u0131r.\n- **3D Pay Hosting Modeli:** T\u00FCm s\u00FCre\u00E7 banka sayfas\u0131nda ger\u00E7ekle\u015Fir, d\u00F6n\u00FC\u015F sa\u011Flan\u0131r.\n\nBu modeller ile i\u015Flem ger\u00E7ekle\u015Ftirilebilmesi i\u00E7in \u00FCye i\u015F yerinin, banka taraf\u0131nda bu modellerin yetkilerine sahip olmas\u0131 gerekmektedir.\n\n## 3D Secure S\u00FCreci\n---\n3D Secure i\u015Flemleri, kullan\u0131c\u0131 do\u011Frulamas\u0131n\u0131n ger\u00E7ekle\u015Ftirilmesi amac\u0131yla \u0060taray\u0131c\u0131 tabanl\u0131 bir y\u00F6nlendirme s\u00FCreci\u0060 i\u00E7erir.\n\nBu do\u011Frulama ad\u0131m\u0131 ba\u015Flat\u0131lmadan \u00F6nce, gerekli parametreler bir \u0060HTML form\u0060 ile istemci taray\u0131c\u0131s\u0131ndan do\u011Frulama sistemine \u0060HTTP POST\u0060 y\u00F6ntemiyle iletilir.\n\n- 3D-Secure entegrasyonu, HTML Form Post y\u00F6ntemi ile sa\u011Flan\u0131r.\n- \u0130\u015Fyeri, kendi sayfas\u0131ndaki formu \u0060TDS Merchant Gateway\u0060 adresine g\u00F6ndererek entegre olur.\n- Form, kullan\u0131c\u0131y\u0131 otomatik olarak do\u011Frulama ekran\u0131na y\u00F6nlendirecek \u015Fekilde yap\u0131land\u0131r\u0131lmal\u0131d\u0131r.\n- Do\u011Frulama ekran\u0131 a\u00E7\u0131ld\u0131ktan sonra i\u015Flem ba\u015Far\u0131l\u0131 veya ba\u015Far\u0131s\u0131z olarak tamamlan\u0131r.\n- Sonu\u00E7lar, i\u015Fyerinin belirledi\u011Fi \u0060okUrl\u0060 ve \u0060failUrl\u0060 adreslerine y\u00F6nlendirilir.\n- Bu nedenle \u0060okUrl\u0060 ve \u0060failUrl\u0060 parametrelerinin request i\u00E7inde yer almas\u0131 zorunludur.\n\n## 3D Model \u0130\u015Fleyi\u015Fi\n---\nBu model iki ad\u0131mdan olu\u015Fur:\n\n1. **3D Kimlik Do\u011Frulama**\n2. **Provizyon**\n\n\u0130\u015Fyeri, TDS Merchant Gateway\u0027e HTML Form Post ile ba\u011Flan\u0131r.  \nDo\u011Frulama ba\u015Far\u0131l\u0131ysa, provizyon i\u00E7in \u0060VPOS Gateway\u0060\u0027in Non-Secure metodu \u00E7a\u011Fr\u0131l\u0131r.\n\nEk kaynaklar:\n- Servis \u00C7a\u011Fr\u0131m\u0131 Kod \u00D6rnekleri (Java, C#, PHP)\n- Hash Hesaplama\n- Random Number Olu\u015Fturma\n\n## Teknik Ak\u0131\u015F\n---\n1. Kart ve i\u015Flem bilgileri TDS Gateway servisine y\u00F6nlendirilir.\n2. Hash do\u011Frulamas\u0131 yap\u0131l\u0131r.\n3. \u0130stek 3DS Server\u0027a iletilir.\n4. 3D do\u011Frulama s\u00FCreci ba\u015Flat\u0131l\u0131r.\n5. Kullan\u0131c\u0131 bankan\u0131n do\u011Frulama ekran\u0131na y\u00F6nlendirilir.\n6. Sonu\u00E7, TDS Gateway\u0027in Result Servisine d\u00F6ner.\n7. Yan\u0131t 3DS Server\u0027\u0131n verify metoduna iletilir.\n8. Do\u011Frulama tamamlan\u0131r ve veriler Acquirer Host sistemine iletilir.\n9. Acquirer Host i\u015Flemi otorize eder.\n10. Sonu\u00E7, Result URL arac\u0131l\u0131\u011F\u0131yla i\u015Fyerine g\u00F6nderilir.\n\n## \u00D6rnek HTML Form Post\n\n\u0060\u0060\u0060html\n\u003Cform action=\u0022https://devcard.sim-ant.com/EverestVpos/V1/TdsMerchantGateway/tdsmerchantgateway/api/threeDS\u0022 method=\u0022post\u0022\u003E\n  \u003Cinput name=\u0022StoreType\u0022 value=\u00223D\u0022\u003E\n  \u003Cinput name=\u0022TransactionType\u0022 value=\u0022Salepos\u0022\u003E\n  \u003Cinput name=\u0022OrderId\u0022 value=\u0022order-1234\u0022\u003E\n  \u003Cinput name=\u0022Pan\u0022 value=\u00225430810017515470\u0022\u003E\n  \u003Cinput name=\u0022CardHolderName\u0022 value=\u0022test test\u0022\u003E\n  \u003Cinput name=\u0022ExpireDate\u0022 value=\u00222509\u0022\u003E\n  \u003Cinput name=\u0022Cvv2\u0022 value=\u0022182\u0022\u003E\n  \u003Cinput name=\u0022TransactionAmount\u0022 value=\u002210000\u0022\u003E\n  \u003Cinput name=\u0022CurrencyCode\u0022 value=\u0022949\u0022\u003E\n  \u003Cinput name=\u0022InstallmentCount\u0022 value=\u00220\u0022\u003E\n  \u003Cinput name=\u0022AcquirerMerchantId\u0022 value=\u0022003401000000777\u0022\u003E\n  \u003Cinput name=\u0022UserId\u0022 value=\u0022003401000000777_ApiUser\u0022\u003E\n  \u003Cinput name=\u0022OkUrl\u0022 value=\u0022https://merchant.successURL/SuccessResult\u0022\u003E\n  \u003Cinput name=\u0022FailUrl\u0022 value=\u0022https://merchant.failURL/FailResult\u0022\u003E\n  \u003Cinput name=\u0022Hash\u0022 placeholder=\u0022Hash De\u011Feri\u0022\u003E\n  \u003Cinput name=\u0022Rnd\u0022 placeholder=\u0022Random Number De\u011Feri\u0022\u003E\n  \u003Cinput name=\u0022TimeStamp\u0022 placeholder=\u0022Timestamp \u0022\u003E\n\u003C/form\u003E\n "
  },
  {
    "Id": 2,
    "SubmenuId": 2,
    "Text": "\n# JSON TEST\n\n**JSON Testleri**, Non-Secure i\u015Flemleri kapsamaktad\u0131r.  \nNon-Secure i\u015Flemler i\u00E7in kullan\u0131lan Hash algoritmas\u0131, key, inputlar ve \u00F6rnek ekran g\u00F6r\u00FCn\u00FCm\u00FC a\u015Fa\u011F\u0131daki gibidir.\n\n\u003E \u0060Hash Hesapla\u0060 butonu arkas\u0131nda hash hesaplama \u00E7al\u0131\u015Facak,  \n\u003E \u0060\u0130\u015Flem Yap\u0060 butonu arkas\u0131nda ilgili i\u015Flem tipi i\u00E7in VPOS Gateway servisi Non-Secure metoduna istek g\u00F6nderilecektir.\n\n---\n\n## SHA-512 Hash Hesaplama\n\n\u0060\u0060\u0060csharp\npublic static string CalculateSHA512(string input, string secretKey)\n{\n    using var hmac = new HMACSHA512(Encoding.UTF8.GetBytes(secretKey));\n    var hashBytes = hmac.ComputeHash(Encoding.UTF8.GetBytes(input));\n    var hash = Convert.ToBase64String(hashBytes);\n    return hash;\n}\n\u0060\u0060\u0060\n\n---\n\n## Non-Secure Hash Input Formatlar\u0131\n\n- **Sale Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B OrderId \u002B CardHolderName \u002B TransactionAmount \u002B CurrencyCode \u002B Pan \u002B Cvv2 \u002B ExpireDate \u002B InstallmentCount \u002B SecurityType \u002B RewardAmount \u002B PFMerchantNumber \u002B CardBrand\u0060\n\n- **Void Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B TransactionId \u002B SecurityType\u0060\n\n- **Refund Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B TransactionId \u002B RefundAmount \u002B SecurityType\u0060\n\n- **Moto Insurance Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B OrderId \u002B TransactionAmount \u002B CurrencyCode \u002B BankIdentificationNumber \u002B Last4Digit \u002B InstallmentCount \u002B SecurityType\u0060\n\n- **Post Auth Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B TransactionId \u002B TransactionAmount \u002B SecurityType\u0060\n\n- **Reward Inquiry Request:**  \n  \u0060MerchantNumber \u002B UserId \u002B ShopCode \u002B IpAddress \u002B OrderId \u002B CurrencyCode \u002B Pan \u002B ExpireDate \u002B Cvv2 \u002B RandomNumber\u0060\n\n\u003E **Secret Key:** \u0060KnhdXY8lkfD6pMzIBhfjX7alsnvQlknv\u0060\n\n---\n\n## \u0130\u015Flem Tiplerine G\u00F6re API \u0130stekleri\n\n### SATI\u015E\n\n\u0060\u0060\u0060json\n{\n  \u0022userId\u0022: \u0022003401000000777_ApiUser\u0022,\n  \u0022password\u0022: \u00221234\u0022,\n  \u0022hashData\u0022: \u0022EOFw/Fqqa5CDdKomFPA8kMHKSHEnOfWBAiAD\u002BXgQOU6QnsbkrqooomNm93KlhL/cymjTg14puqeVhidtK4YTjg==\u0022,\n  \u0022merchantNumber\u0022: \u0022003401000000777\u0022,\n  \u0022shopCode\u0022: \u0022shopCode005\u0022,\n  \u0022iPAddress\u0022: \u0022192.168.1.1\u0022,\n  \u0022transactionType\u0022: \u0022SALEPOS\u0022,\n  \u0022orderId\u0022: \u0022ORDER-686420\u0022,\n  \u0022cardHolderName\u0022: \u0022test test\u0022,\n  \u0022transactionAmount\u0022: \u00228000\u0022,\n  \u0022currencyCode\u0022: \u0022949\u0022,\n  \u0022pan\u0022: \u00224920951536599528\u0022,\n  \u0022cvv2\u0022: \u0022456\u0022,\n  \u0022expireDate\u0022: \u00222801\u0022,\n  \u0022installmentCount\u0022: \u00220\u0022,\n  \u0022securityType\u0022: \u0022NonSecure\u0022\n}\n\u0060\u0060\u0060\n"
  },
  {
    "Id": 3,
    "SubmenuId": 3,
    "Text": "![Alt text](https://gurmehub.com/wp-content/uploads/2023/10/sanal-pos-0.jpg\u0022Optional title\u0022)\n\n![Alt text](https://www.temelbilisim.com.tr/upload/hizmetler/5.gif \u0022Optional title\u0022)"
  }
]