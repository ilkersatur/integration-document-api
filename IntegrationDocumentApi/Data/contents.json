[
  {
    "Id": 1,
    "SubmenuId": 1,
    "Text": "## 3.1. Sanal Pos Nedir?\n\nSanal POS, fiziksel bir cihaz kullanmaya gerek kalmadan internet \u00FCzerinden kredi kart\u0131 veya banka kart\u0131yla \u00F6deme almay\u0131 sa\u011Flayan dijital bir \u00F6deme \u00E7\u00F6z\u00FCm\u00FCd\u00FCr. Temel olarak bir ma\u011Fazada kullan\u0131lan POS cihaz\u0131n\u0131n \u00E7evrimi\u00E7i ortamda \u00E7al\u0131\u015Fan versiyonudur. Al\u0131\u015Fveri\u015F sitesine entegre edilen bu yap\u0131 sayesinde m\u00FC\u015Fteri kart bilgilerini girer, bu bilgiler banka sistemine iletilir ve i\u015Flem onay ya da red yan\u0131t\u0131yla tamamlan\u0131r.\n\nSanal POS ile; \u00FCr\u00FCn tutar bilgisi, kart numaras\u0131, son kullan\u0131m tarihi, g\u00FCvenlik kodu (CVV/CVC) gibi bilgiler bankaya g\u00FCvenli \u015Fekilde iletilir. Banka bu bilgileri de\u011Ferlendirerek i\u015Flemi onaylar veya reddeder. Ayr\u0131ca iade, iptal, taksitli sat\u0131\u015F ve puan sorgulama gibi ek \u00F6zellikler de desteklenir.\n\nVisa, MasterCard ve TROY gibi kart \u015Femalar\u0131 ile \u00E7al\u0131\u015Fabilen sistem, 3D Secure gibi ek g\u00FCvenlik katmanlar\u0131n\u0131 da destekleyerek, kullan\u0131c\u0131lar\u0131n \u00E7evrimi\u00E7i ortamda daha g\u00FCvenli al\u0131\u015Fveri\u015F yapmas\u0131na olanak tan\u0131maktad\u0131r."
  },
  {
    "Id": 2,
    "SubmenuId": 2,
    "Text": "## 3.2. Sistemin Genel \u00C7al\u0131\u015Fma Yap\u0131s\u0131\n\nKullan\u0131c\u0131 e-ticaret sitesindeki \u00F6deme sayfas\u0131na giri\u015F yaparak kart bilgilerini girer. Bu bilgiler, \u00FCye i\u015Fyerinin sanal POS bilgileri ve sipari\u015F detaylar\u0131 ile birlikte VPOS gateway sistemine iletilir. Buradan itibaren i\u015Flem, 3D Secure veya Non-Secure olarak iki farkl\u0131 ak\u0131\u015Fta ilerler.\n\n### 3.2.1. Non-Secure \u0130\u015Flem Ak\u0131\u015F\u0131\n\n1.  \u00DCye i\u015Fyeri m\u00FC\u015Fterinin kart bilgisi ve sipari\u015F bilgilerini do\u011Frudan VPos Gateway servisine iletir.\n2.  VPos Gateway gelen iste\u011Fin hash kontrol\u00FCn\u00FC ger\u00E7ekle\u015Ftirir.\n3.  Do\u011Frulama sonras\u0131, i\u015Flem t\u00FCr\u00FCne g\u00F6re ilgili VPos otorizasyon servisi \u00E7a\u011Fr\u0131l\u0131r.\n4.  Otorizasyon sonucu al\u0131n\u0131r ve do\u011Frudan \u00FCye i\u015Fyerine iletilir.\n\n### 3.2.2. Secure \u0130\u015Flem Ak\u0131\u015F\u0131\n\n1.  Kart ve i\u015Flem bilgileri TDS Gateway servisine y\u00F6nlendirilir.\n2.  TDS Gateway, gelen iste\u011Fin hash do\u011Frulamas\u0131n\u0131 yapar.\n3.  Do\u011Frulanan istek, 3D Secure Server (3DS Server)\u2019a iletilir.\n4.  3DS Server, gerekli do\u011Frulama kontrollerini yaparak 3D s\u00FCrecini ba\u015Flat\u0131r.\n5.  Kullan\u0131c\u0131, bankan\u0131n 3D do\u011Frulama ekran\u0131na y\u00F6nlendirilir.\n6.  Kullan\u0131c\u0131n\u0131n i\u015Flemi tamamlamas\u0131n\u0131n ard\u0131ndan, sonu\u00E7 TDS Gateway\u2019in Result Servisine d\u00F6ner.\n7.  Result Servisi, gelen yan\u0131t\u0131 tekrar 3DS Server\u2019\u0131n verify metoduna ileterek do\u011Frulama sa\u011Flar.\n8.  Do\u011Frulanm\u0131\u015F yan\u0131t i\u00E7inde yer alan 3D verisi, m\u00FC\u015Fteri verisiyle birle\u015Ftirilerek Acquirer Host sistemine iletilir.\n9.  Acquirer Host, i\u015Flemin otorizasyonunu ger\u00E7ekle\u015Ftirir ve sonucu TDS Gateway\u2019e iletir.\n10. TDS Gateway, bu sonucu, ilk a\u015Famada ald\u0131\u011F\u0131 Result URL \u00FCzerinden \u00FCye i\u015Fyerine y\u00F6nlendirir.\n"
  },
  {
    "Id": 3,
    "SubmenuId": 3,
    "Text": "## 3.3. \u0130\u015Flem Ak\u0131\u015Flar\u0131\n\n**Web Browser Ak\u0131\u015F\u0131**\n![Web Browser Ak\u0131\u015F\u0131](webbrowserakisi.jpg)\n\n**Ba\u015Far\u0131l\u0131 \u0130\u015Flem Ak\u0131\u015F\u0131**\n![Ba\u015Far\u0131l\u0131 \u0130\u015Flem Ak\u0131\u015F\u0131](basariliislemakisi.jpg)"
  },
  {
    "Id": 4,
    "SubmenuId": 4,
    "Text": "**FURKAN VE \u0130SMAIL ABI ILE DETAYLANDIRILACAK.**\n\nAPI tabanl\u0131 do\u011Frudan entegrasyon\n\nHosted Payment Page olacak m\u0131?\n\nIFrame entegrasyonu olacak m\u0131?"
  },
  {
    "Id": 5,
    "SubmenuId": 5,
    "Text": "## 3.5.Backoffice Login\n\n Ba\u015Fvuru ve i\u015Fyeri olu\u015Fturma i\u015Flemlerinin tamamlanmas\u0131n\u0131n ard\u0131ndan ma\u011Faza kodu, \u0130\u015Fyeri Y\u00F6neticisi rol\u00FCnde iletilen kullan\u0131c\u0131 kodu ve \u015Fifre ile \u0060\u0060localhost/V1/UI/ui/dashboard\u0060\u0060 adresine giri\u015F yap\u0131l\u0131r.\n\n\u003Cimg src=\u0022../images/backofficelogin.jpg\u0022 alt=\u0022Backoffice Login\u0022 style=\u0022max-width:1500px; height:auto;\u0022 /\u003E\n\n\u0130\u015Fyeri y\u00F6neticisi rol\u00FCndeki kullan\u0131c\u0131 ile neler yap\u0131labilir?\n\n\u003Cbr\u003E\n\n \u2022 Yeni kullan\u0131c\u0131lar tan\u0131mlanabilir. \n \n\u2022 Tan\u0131mlam\u0131\u015F oldu\u011Funuz kullan\u0131c\u0131lar\u0131n bilgileri g\u00FCncellenebilir, \u015Fifreleri resetlenebilir. Ekran yetkileri ve i\u015Flem yetkileri y\u00F6netilebilir. \u0130lk loginde \u015Fifre de\u011Fi\u015Fiklik ekran\u0131na y\u00F6nlendirilir ve \u015Fifre de\u011Fi\u015Fikli\u011Fi yap\u0131lmas\u0131 gerekir.\n\n### 3.5.1. Kullan\u0131c\u0131 Olu\u015Fturma\n\nBilgileri iletilen kullan\u0131c\u0131 \u0130\u015Fyeri Y\u00F6neticisi (Admin) olmas\u0131 sebebiyle, Everest VPos \u00FCzerinden i\u015Flem yap\u0131labilmesi i\u00E7in yeni kullan\u0131c\u0131lar tan\u0131mlanmal\u0131d\u0131r. \u0130\u015Fyeri Kullan\u0131c\u0131s\u0131 olarak kullan\u0131c\u0131 tan\u0131mlanabilir. \n\n\u2022 \u0130\u015Fyeri Kullan\u0131c\u0131s\u0131: Back Office ekranlar\u0131n\u0131 kullanabilen kullan\u0131c\u0131 tipidir. Ekran ve i\u015Flem yetkileri ba\u011Fl\u0131 olarak sat\u0131\u015F, iptal, iade, \u00F6nprovizyon, \u00F6nprovizyon kapatma gibi i\u015Flemleri yapabilir, kendisine ait terminallerden yap\u0131lan i\u015Flemleri izleyebilir, \u00E7\u0131kt\u0131s\u0131n\u0131 alabilir.\n\n\u2022\u0130\u015Fyeri Kullan\u0131c\u0131s\u0131  i\u00E7in sol men\u00FCde yer alan \u201CAyarlar\u201D k\u0131sm\u0131ndan \u201CKullan\u0131c\u0131 Y\u00F6netimi\u201D ekran\u0131na ula\u015F\u0131l\u0131r ve \u201CKullan\u0131c\u0131 Ekle\u201D butonuna t\u0131klan\u0131r. Ekrandaki veriler a\u015Fa\u011F\u0131daki gibi doldurulur.\n\n![Kullan\u0131c\u0131 Olu\u015Fturma](kullaniciolusturma.jpg)\n\nTan\u0131m ekran\u0131ndaki alan a\u00E7\u0131klamalar\u0131: \n1. Kullan\u0131c\u0131 ID: Backoffice giri\u015Fi i\u00E7in kullan\u0131lan kullan\u0131c\u0131 ad\u0131d\u0131r. \n2. Kullan\u0131c\u0131 Tan\u0131m\u0131: Kullan\u0131c\u0131ya ait a\u00E7\u0131klama. \n3. Kullan\u0131c\u0131 Tipi: Kullan\u0131c\u0131 yetki ve i\u015Flem tiplerine g\u00F6re ait olaca\u011F\u0131 grubun tan\u0131mland\u0131\u011F\u0131 aland\u0131r. (\u0130\u015Fyeri Kullan\u0131c\u0131s\u0131, API Kullan\u0131c\u0131s\u0131 vs.)\n4. Ad-Soyad-Mail-Telefon bilgileri zorunludur. Olu\u015Fturulan kullan\u0131c\u0131ya ait id ve \u015Fifre bilgileri ileti\u015Fim kanallar\u0131 arac\u0131l\u0131\u011F\u0131yla iletilmektedir. "
  },
  {
    "Id": 6,
    "SubmenuId": 6,
    "Text": "# 4. Eri\u015Fim Adresleri\n\n| Proje Ad\u0131 | Test URL | \n|----|-----|\n| Everest VPOS Test \u00D6deme Sayfas\u0131 | localhost/V1/Client|\n| VPOS Gateway | localhost/V1/vposgateway|\n| TDS Merchant Gateway | localhost/V1/Client|\n| Everest VPOS Portal | localhost/V1/UI/ui/dashboard |\n\n| Proje Ad\u0131 | Test URL | \n|----|-----|\n|Everest VPOS Portal |  |"
  },
  {
    "Id": 7,
    "SubmenuId": 7,
    "Text": "# 5. Web Servisler\n\nEverest VPOS sisteminde entegre olunmas\u0131 gereken servisler a\u015Fa\u011F\u0131daki gibidir.\n\n## 5.1. Everest VPOS Gateway Servisleri\n\n**Servis URL:**  \n[localhost/V1/vposgateway](localhost/V1/vposgateway)\n\n### 5.1.1. Non Secure Servisi\n\n**Non-Secure Servisi**, m\u00FC\u015Fterinin kart bilgileri ve sipari\u015F detaylar\u0131n\u0131n do\u011Frudan VPOS Gateway\u2019e g\u00F6nderildi\u011Fi, ek bir kullan\u0131c\u0131 do\u011Frulama ad\u0131m\u0131 (\u00F6rne\u011Fin 3D Secure ekran\u0131) olmadan otorizasyonun al\u0131nd\u0131\u011F\u0131 \u00F6deme i\u015Flem servisidir.\n\n### Non Secure Authorization Servisi (Input)\n\n| Parametre                              | Tip | Uzunluk | Zorunlu / Opsiyonel                  | A\u00E7\u0131klama |\n|----------------------------------------|-----|---------|--------------------------------------|----------|\n| apiVersion                             | N   | 20      | Opsiyonel                            | Everest Sanal Pos API\u2019sinin hangi s\u00FCr\u00FCm\u00FCn\u00FCn kullan\u0131ld\u0131\u011F\u0131n\u0131 belirtir. |\n| userId                                 | AN  | 100     | Zorunlu                              | Sanal POS sistemine eri\u015Fim sa\u011Flayan kullan\u0131c\u0131ya ait benzersiz kullan\u0131c\u0131 bilgisidir. |\n| password                               | AN  | 128     | Zorunlu                              | Kullan\u0131c\u0131 kimlik do\u011Frulamas\u0131 amac\u0131yla kullan\u0131lan \u015Fifre alan\u0131d\u0131r. |\n| hashData                               | AN  | 128     | Zorunlu                              | G\u00F6nderilen bilginin do\u011Frulu\u011Funu kontrol etmek i\u00E7in kullan\u0131l\u0131r. |\n| merchantNumber                         | N   | 15      | Zorunlu                              | 15 haneli \u00FCye i\u015Fyeri numaras\u0131d\u0131r. |\n| shopCode                               | AN  | 15      | Zorunlu                              | Banka taraf\u0131ndan sa\u011Flanan ma\u011Faza kodudur. |\n| iPAddress                              | N   | 64      | Zorunlu                              | \u0130ste\u011Fi ba\u015Flatan istemcinin IP adresi. |\n| transactionType                        | A   | 20      | Zorunlu                              | \u0130\u015Flem t\u00FCr\u00FC (sale, refund, pre-auth vb.). |\n| orderId                                | AN  | 50      | Opsiyonel                            | \u00DCye i\u015Fyeri taraf\u0131ndan \u00FCretilen i\u015Fleme \u00F6zg\u00FC numara. |\n| cardHolderName                         | A   | 50      | Zorunlu                              | Kart \u00FCzerindeki ad-soyad bilgisi. |\n| transactionAmount                      | N   | 13      | Zorunlu                              | \u0130\u015Flem tutar\u0131 (kuru\u015F cinsinden). |\n| currencyCode                           | N   | 4       | Zorunlu                              | Para birimi kodu. |\n| pan                                    | N   | 19      | Zorunlu                              | Kart numaras\u0131. |\n| cvv2                                   | N   | 4       | Opsiyonel                            | Kart g\u00FCvenlik numaras\u0131. |\n| expireDate                             | N   | 4       | Zorunlu                              | Kart son kullanma tarihi (YYMM). |\n| installmentCount                       | N   | 2       | Zorunlu                              | Taksit say\u0131s\u0131, pe\u015Fin ise 0. |\n| securityType                           | N   | 1       | Zorunlu                              | \u2014 |\n| rewardType                             | N   | 1       | Opsiyonel                            | \u00D6d\u00FCl tipi. |\n| rewardAmount                           | N   | 13      | Puan Kullan\u0131m\u0131nda Zorunlu           | \u00D6d\u00FCl tutar\u0131 (kuru\u015F cinsinden). |\n| pFMerchantNumber                       | N   | 15      | Opsiyonel                            | PF \u0130\u015Fyeri numaras\u0131. |\n| cardBrand                              | A   | 1       | Opsiyonel                            | Kart markas\u0131. |\n| additionalData                         | AN  | 128     | Opsiyonel                            | Kurumlara \u00F6zel veri. |\n| bankIdentificationNumber               | N   | 8       | Sigorta i\u015Flemlerinde Zorunlu        | Kart\u0131n ilk 6-8 hanesi. |\n| last4Digit                             | N   | 4       | Sigorta i\u015Flemlerinde Zorunlu        | Kart\u0131n son 4 hanesi. |\n| citizenshipNumber                      | N   | 11      | Sigorta i\u015Flemlerinde Zorunlu        | Kimlik numaras\u0131. |\n| transactionId                          | N   | 50      | \u0130ptal/\u0130ade/PostAuth i\u015Flemlerinde Zorunlu | Sistem taraf\u0131ndan olu\u015Fturulan i\u015Flem ID\u2019si. |\n| refundAmount                           | N   | 13      | Refund i\u015Flemlerinde Zorunlu         | \u0130ade tutar\u0131. |\n| av                                     | N   | 28      | 3D i\u015Flemlerde Zorunlu               | 3D Secure do\u011Frulama de\u011Feri. |\n| eci                                    | N   | 2       | 3D i\u015Flemlerde Zorunlu               | Do\u011Frulama t\u00FCr\u00FC ve g\u00FCvenlik seviyesi. |\n| threeDsProgramProtocol                 | N   |         | 3D i\u015Flemlerde Zorunlu               | 3D Secure protokol\u00FC. |\n| threeDsDirectoryServerTransactionId    | N   |         | 3D i\u015Flemlerde Zorunlu               | 3D Secure Directory Server i\u015Flem ID\u2019si. |\n| recurringFlag                          | N   | 1       | Recurring i\u015Flemlerde Zorunlu        | Tekrarlayan i\u015Flem bayra\u011F\u0131. |\n| linkPaymentToken                       | AN  | 80      | Link ile \u00D6deme i\u015Flemlerde Zorunlu   | Kart yerine g\u00F6nderilen token. |\n\n### Non Secure Authorization Servisi (Output)\n\n| Parametre           | Tip | Uzunluk | A\u00E7\u0131klama |\n|---------------------|-----|---------|----------|\n| responseCode        | N   | 6       | \u0130\u015Flem sonucunu g\u00F6steren yan\u0131t kodudur. |\n| responseReasonCode  | AN  | 50      | \u0130\u015Flemin neden bu \u015Fekilde sonu\u00E7land\u0131\u011F\u0131n\u0131 a\u00E7\u0131klayan detayl\u0131 kodtur. |\n| responseMessage     | AN  |         | \u0130\u015Fleme ait mesaj bilgisidir. |\n| orderId             | AN  | 50      | \u00DCye i\u015Fyeri taraf\u0131ndan \u00FCretilen i\u015Fleme \u00F6zg\u00FC bir numarad\u0131r. Bo\u015F ise sistem taraf\u0131ndan otomatik \u00FCretilir. |\n| authorizationNumber | AN  | 6       | \u0130\u015Flemin provizyon kodudur. |\n| rRN                 | N   | 12      | \u0130\u015Fleme ait referans numaras\u0131d\u0131r. |\n| stan                | AN  | 15      | POS terminali taraf\u0131ndan \u00FCretilen izleme numaras\u0131d\u0131r (g\u00FCnl\u00FCk i\u015Flem s\u0131ras\u0131n\u0131 g\u00F6sterir). |\n| transactionId       | N   | 50      | Her bir i\u015Flem i\u00E7in sistem taraf\u0131ndan olu\u015Fturulan benzersiz de\u011Ferdir. |\n| transactionDate     | N   | 8       | \u0130\u015Flem tarih-zaman bilgisi (date-time format\u0131nda). |\n| isError             | N   | 1       | \u0130\u015Flem s\u0131ras\u0131nda hata olup olmad\u0131\u011F\u0131n\u0131 g\u00F6steren boolean de\u011Feri. |\n| success             | N   | 1       | \u0130\u015Flemin ba\u015Far\u0131l\u0131 olup olmad\u0131\u011F\u0131n\u0131 g\u00F6steren boolean de\u011Feri. |\n\n#### 5.1.2. Reward Inquiry Servisi\n\n**Reward Inquiry Servisi**, issuer entegrasyonu ile birlikte, sat\u0131\u015F \u00F6ncesinde m\u00FC\u015Fterinin puan bilgisini sorgulamak amac\u0131yla \u00E7a\u011Fr\u0131l\u0131r.  \nSorgulama sonucunda elde edilen puan bilgisi, sat\u0131\u015F i\u015Flemini ger\u00E7ekle\u015Ftiren ilgili metoda aktar\u0131lmal\u0131d\u0131r.\n\n### Reward Inquiry (Input)\n\n| Parametre       | Tip | Uzunluk | Zorunlu / Opsiyonel | A\u00E7\u0131klama |\n|-----------------|-----|---------|----------------------|----------|\n| merchantNumber  | N   | 15      | Zorunlu              | \u0130\u015Fyeri numaras\u0131 |\n| userId          | AN  | 100     | Zorunlu              | Kullan\u0131c\u0131 kodu |\n| shopCode        | AN  | 15      | Zorunlu              | Ma\u011Faza kodu |\n| currencyCode    | N   | 4       | Zorunlu              | \u0130\u015Flem para birimi |\n| pan             | A   | 19      | Zorunlu              | A\u00E7\u0131k kart numaras\u0131 |\n| cvv2            | N   | 4       | Zorunlu              | Kart g\u00FCvenlik numaras\u0131 |\n| expireDate      | N   | 4       | Zorunlu              | Kart son kullan\u0131m tarihi |\n| orderId         | AN  | 50      | Opsiyonel            | \u00DCye i\u015Fyeri taraf\u0131ndan \u00FCretilen i\u015Fleme \u00F6zg\u00FC numara. Bo\u015F ise sistem \u00FCretir. |\n| transactionId   | N   | 50      | Zorunlu              | Benzersiz i\u015Flem numaras\u0131 |\n| ipAddress       | N   | 64      | Zorunlu              | \u0130\u015Flemin g\u00F6nderildi\u011Fi IP adresi bilgisi |\n| randomNumber    | AN  | 128     | Zorunlu              | Her i\u015Flem i\u00E7in benzersiz olarak \u00FCretilen rastgele bir de\u011Fer |\n| hashData        | AN  | 128     | Zorunlu              | G\u00F6nderilen bilginin do\u011Frulu\u011Funu kontrol etmek i\u00E7in kullan\u0131lan de\u011Fer |\n\n### Reward Inquiry (Output)\n\n| Parametre           | Tip | Uzunluk | A\u00E7\u0131klama |\n|---------------------|-----|---------|----------|\n| transactionId       | N   | 50      | Benzersiz i\u015Flem numaras\u0131 |\n| orderId             | AN  | 50      | \u00DCye i\u015Fyeri taraf\u0131ndan \u00FCretilen i\u015Fleme \u00F6zg\u00FC bir numarad\u0131r. Bo\u015F ise sistem taraf\u0131ndan otomatik \u00FCretilir. |\n| transactionDate     | N   | 8       | \u0130\u015Flem tarih-zaman bilgisi, date-time format\u0131ndad\u0131r. |\n| rewardAmount        | N   | 13      | \u00D6d\u00FCl tutar\u0131 bilgisi, kuru\u015F. (10 TL = 1000) |\n| authorizationNumber | N   | 6       | \u0130\u015Flem otorizasyon numaras\u0131 |\n| rRN                 | N   | 12      | \u0130\u015Flem referans numaras\u0131d\u0131r |\n| stan                | N   | 4       | Terminal taraf\u0131ndan olu\u015Fturulan izleme numaras\u0131 (genellikle 6 haneli) |\n| isError             | N   | 1       | \u0130\u015Flemde hata olup olmad\u0131\u011F\u0131n\u0131 belirten de\u011Fer |\n| responseCode        |     |         | \u0130\u015Flem sonucunu g\u00F6steren yan\u0131t kodudur |\n| responseReasonCode  |     |         | Yan\u0131t\u0131n detay neden kodu |\n| responseMessage     |     |         | A\u00E7\u0131klay\u0131c\u0131 mesaj |\n"
  },
  {
    "Id": 9,
    "SubmenuId": 9,
    "Text": "# 3D-Secure \u0130\u015Flemleri\n---\n**3D-Secure i\u015Flemler**, kart sahibinin kimli\u011Finin do\u011Frulanmas\u0131n\u0131 sa\u011Flayan bir g\u00FCvenlik protokol\u00FCd\u00FCr.  \nOnline al\u0131\u015Fveri\u015Flerde i\u015Flem s\u0131ras\u0131nda kullan\u0131c\u0131dan cep telefonuna gelen dinamik \u015Fifre ya da mobil onay istenir.  \nBu \u015Fifre ile i\u015Flem banka sisteminde do\u011Frulan\u0131r ve \u00F6deme tamamlan\u0131r.\n\n## 3D-Secure Modelleri\n---\n3D-Secure i\u015Flemlerinde 3 farkl\u0131 model desteklenmektedir:\n\n- **3D Modeli:** Do\u011Frulama ve provizyon ayr\u0131 ad\u0131mlard\u0131r, ikinci ad\u0131m\u0131 \u00FCye i\u015Fyeri tamamlar.\n- **3D Pay Modeli:** Do\u011Frulama ve provizyon ayn\u0131 ad\u0131mda tamamlan\u0131r.\n- **3D Pay Hosting Modeli:** T\u00FCm s\u00FCre\u00E7 banka sayfas\u0131nda ger\u00E7ekle\u015Fir, d\u00F6n\u00FC\u015F sa\u011Flan\u0131r.\n\nBu modeller ile i\u015Flem ger\u00E7ekle\u015Ftirilebilmesi i\u00E7in \u00FCye i\u015F yerinin, banka taraf\u0131nda bu modellerin yetkilerine sahip olmas\u0131 gerekmektedir.\n\n## 3D Secure S\u00FCreci\n---\n3D Secure i\u015Flemleri, kullan\u0131c\u0131 do\u011Frulamas\u0131n\u0131n ger\u00E7ekle\u015Ftirilmesi amac\u0131yla \u0060taray\u0131c\u0131 tabanl\u0131 bir y\u00F6nlendirme s\u00FCreci\u0060 i\u00E7erir.\n\nBu do\u011Frulama ad\u0131m\u0131 ba\u015Flat\u0131lmadan \u00F6nce, gerekli parametreler bir \u0060HTML form\u0060 ile istemci taray\u0131c\u0131s\u0131ndan do\u011Frulama sistemine \u0060HTTP POST\u0060 y\u00F6ntemiyle iletilir.\n\n- 3D-Secure entegrasyonu, HTML Form Post y\u00F6ntemi ile sa\u011Flan\u0131r.\n- \u0130\u015Fyeri, kendi sayfas\u0131ndaki formu \u0060TDS Merchant Gateway\u0060 adresine g\u00F6ndererek entegre olur.\n- Form, kullan\u0131c\u0131y\u0131 otomatik olarak do\u011Frulama ekran\u0131na y\u00F6nlendirecek \u015Fekilde yap\u0131land\u0131r\u0131lmal\u0131d\u0131r.\n- Do\u011Frulama ekran\u0131 a\u00E7\u0131ld\u0131ktan sonra i\u015Flem ba\u015Far\u0131l\u0131 veya ba\u015Far\u0131s\u0131z olarak tamamlan\u0131r.\n- Sonu\u00E7lar, i\u015Fyerinin belirledi\u011Fi \u0060okUrl\u0060 ve \u0060failUrl\u0060 adreslerine y\u00F6nlendirilir.\n- Bu nedenle \u0060okUrl\u0060 ve \u0060failUrl\u0060 parametrelerinin request i\u00E7inde yer almas\u0131 zorunludur.\n\n## 3D Model \u0130\u015Fleyi\u015Fi\n---\nBu model iki ad\u0131mdan olu\u015Fur:\n\n1. **3D Kimlik Do\u011Frulama**\n2. **Provizyon**\n\n\u0130\u015Fyeri, TDS Merchant Gateway\u0027e HTML Form Post ile ba\u011Flan\u0131r.  \nDo\u011Frulama ba\u015Far\u0131l\u0131ysa, provizyon i\u00E7in \u0060VPOS Gateway\u0060\u0027in Non-Secure metodu \u00E7a\u011Fr\u0131l\u0131r.\n\nEk kaynaklar:\n- Servis \u00C7a\u011Fr\u0131m\u0131 Kod \u00D6rnekleri (Java, C#, PHP)\n- Hash Hesaplama\n- Random Number Olu\u015Fturma\n\n## Teknik Ak\u0131\u015F\n---\n1. Kart ve i\u015Flem bilgileri TDS Gateway servisine y\u00F6nlendirilir.\n2. Hash do\u011Frulamas\u0131 yap\u0131l\u0131r.\n3. \u0130stek 3DS Server\u0027a iletilir.\n4. 3D do\u011Frulama s\u00FCreci ba\u015Flat\u0131l\u0131r.\n5. Kullan\u0131c\u0131 bankan\u0131n do\u011Frulama ekran\u0131na y\u00F6nlendirilir.\n6. Sonu\u00E7, TDS Gateway\u0027in Result Servisine d\u00F6ner.\n7. Yan\u0131t 3DS Server\u0027\u0131n verify metoduna iletilir.\n8. Do\u011Frulama tamamlan\u0131r ve veriler Acquirer Host sistemine iletilir.\n9. Acquirer Host i\u015Flemi otorize eder.\n10. Sonu\u00E7, Result URL arac\u0131l\u0131\u011F\u0131yla i\u015Fyerine g\u00F6nderilir.\n\n## \u00D6rnek HTML Form Post\n\n\u0060\u0060\u0060html\n\u003Cform action=\u0022localhost/V1/TdsMerchantGateway/tdsmerchantgateway/api/threeDS\u0022 method=\u0022post\u0022\u003E\n  \u003Cinput name=\u0022StoreType\u0022 value=\u00223D\u0022\u003E\n  \u003Cinput name=\u0022TransactionType\u0022 value=\u0022Salepos\u0022\u003E\n  \u003Cinput name=\u0022OrderId\u0022 value=\u0022order-1234\u0022\u003E\n  \u003Cinput name=\u0022Pan\u0022 value=\u00225430810017515470\u0022\u003E\n  \u003Cinput name=\u0022CardHolderName\u0022 value=\u0022test test\u0022\u003E\n  \u003Cinput name=\u0022ExpireDate\u0022 value=\u00222509\u0022\u003E\n  \u003Cinput name=\u0022Cvv2\u0022 value=\u0022182\u0022\u003E\n  \u003Cinput name=\u0022TransactionAmount\u0022 value=\u002210000\u0022\u003E\n  \u003Cinput name=\u0022CurrencyCode\u0022 value=\u0022949\u0022\u003E\n  \u003Cinput name=\u0022InstallmentCount\u0022 value=\u00220\u0022\u003E\n  \u003Cinput name=\u0022AcquirerMerchantId\u0022 value=\u0022003401000000777\u0022\u003E\n  \u003Cinput name=\u0022UserId\u0022 value=\u0022003401000000777_ApiUser\u0022\u003E\n  \u003Cinput name=\u0022OkUrl\u0022 value=\u0022https://merchant.successURL/SuccessResult\u0022\u003E\n  \u003Cinput name=\u0022FailUrl\u0022 value=\u0022https://merchant.failURL/FailResult\u0022\u003E\n  \u003Cinput name=\u0022Hash\u0022 placeholder=\u0022Hash De\u011Feri\u0022\u003E\n  \u003Cinput name=\u0022Rnd\u0022 placeholder=\u0022Random Number De\u011Feri\u0022\u003E\n  \u003Cinput name=\u0022TimeStamp\u0022 placeholder=\u0022Timestamp \u0022\u003E\n\u003C/form\u003E\n\u0060\u0060\u0060\n "
  },
  {
    "Id": 10,
    "SubmenuId": 10,
    "Text": "# JSON TEST\n\n**JSON Testleri**, Non-Secure i\u015Flemleri kapsamaktad\u0131r.  \nNon-Secure i\u015Flemler i\u00E7in kullan\u0131lan Hash algoritmas\u0131, key, inputlar ve \u00F6rnek ekran g\u00F6r\u00FCn\u00FCm\u00FC a\u015Fa\u011F\u0131daki gibidir.\n\n\u0060Hash Hesapla\u0060 butonu arkas\u0131nda hash hesaplama \u00E7al\u0131\u015Facak,  \n\u0060\u0130\u015Flem Yap\u0060 butonu arkas\u0131nda ilgili i\u015Flem tipi i\u00E7in VPOS Gateway servisi Non-Secure metoduna istek g\u00F6nderilecektir.\n\n---\n\n## SHA-512 Hash Hesaplama\n\n\u0060\u0060\u0060csharp\npublic static string CalculateSHA512(string input, string secretKey)\n{\n    using var hmac = new HMACSHA512(Encoding.UTF8.GetBytes(secretKey));\n    var hashBytes = hmac.ComputeHash(Encoding.UTF8.GetBytes(input));\n    var hash = Convert.ToBase64String(hashBytes);\n    return hash;\n}\n\u0060\u0060\u0060\n\n---\n\n## Non-Secure Hash Input Formatlar\u0131\n\n- **Sale Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B OrderId \u002B CardHolderName \u002B TransactionAmount \u002B CurrencyCode \u002B Pan \u002B Cvv2 \u002B ExpireDate \u002B InstallmentCount \u002B SecurityType \u002B RewardAmount \u002B PFMerchantNumber \u002B CardBrand\u0060\n\n- **Void Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B TransactionId \u002B SecurityType\u0060\n\n- **Refund Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B TransactionId \u002B RefundAmount \u002B SecurityType\u0060\n\n- **Moto Insurance Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B OrderId \u002B TransactionAmount \u002B CurrencyCode \u002B BankIdentificationNumber \u002B Last4Digit \u002B InstallmentCount \u002B SecurityType\u0060\n\n- **Post Auth Request:**  \n  \u0060UserId \u002B Password \u002B MerchantNumber \u002B ShopCode \u002B TransactionType \u002B TransactionId \u002B TransactionAmount \u002B SecurityType\u0060\n\n- **Reward Inquiry Request:**  \n  \u0060MerchantNumber \u002B UserId \u002B ShopCode \u002B IpAddress \u002B OrderId \u002B CurrencyCode \u002B Pan \u002B ExpireDate \u002B Cvv2 \u002B RandomNumber\u0060\n\n\u003E **Secret Key:** \u0060KnhdXY8lkfD6pMzIBhfjX7alsnvQlknv\u0060\n\n---\n\n## \u0130\u015Flem Tiplerine G\u00F6re API \u0130stekleri\n\n### SATI\u015E\n\n\u0060\u0060\u0060json\n{\n  \u0022userId\u0022: \u0022003401000000777_ApiUser\u0022,\n  \u0022password\u0022: \u00221234\u0022,\n  \u0022hashData\u0022: \u0022EOFw/Fqqa5CDdKomFPA8kMHKSHEnOfWBAiAD\u002BXgQOU6QnsbkrqooomNm93KlhL/cymjTg14puqeVhidtK4YTjg==\u0022,\n  \u0022merchantNumber\u0022: \u0022003401000000777\u0022,\n  \u0022shopCode\u0022: \u0022shopCode005\u0022,\n  \u0022iPAddress\u0022: \u0022192.168.1.1\u0022,\n  \u0022transactionType\u0022: \u0022SALEPOS\u0022,\n  \u0022orderId\u0022: \u0022ORDER-686420\u0022,\n  \u0022cardHolderName\u0022: \u0022test test\u0022,\n  \u0022transactionAmount\u0022: \u00228000\u0022,\n  \u0022currencyCode\u0022: \u0022949\u0022,\n  \u0022pan\u0022: \u00224920951536599528\u0022,\n  \u0022cvv2\u0022: \u0022456\u0022,\n  \u0022expireDate\u0022: \u00222801\u0022,\n  \u0022installmentCount\u0022: \u00220\u0022,\n  \u0022securityType\u0022: \u0022NonSecure\u0022\n}\n\u0060\u0060\u0060\n"
  },
  {
    "Id": 11,
    "SubmenuId": 11,
    "Text": "# 1.2. HTML Test\n\n**HTML Testleri**, Secure i\u015Flemleri kapsamaktad\u0131r.  \n3D Secure i\u015Flemleri, kullan\u0131c\u0131 do\u011Frulamas\u0131n\u0131n ger\u00E7ekle\u015Ftirilmesi amac\u0131yla taray\u0131c\u0131 tabanl\u0131 bir y\u00F6nlendirme s\u00FCreci i\u00E7erir.  \nBu do\u011Frulama ad\u0131m\u0131n\u0131n ba\u015Flat\u0131labilmesi i\u00E7in, ilgili parametreler bir HTML form arac\u0131l\u0131\u011F\u0131yla istemci taray\u0131c\u0131s\u0131ndan do\u011Frulama sistemine **HTTP POST** y\u00F6ntemiyle iletilir.  \n\n**3D-Secure entegrasyonu**, \u0060HTML Form Post\u0060 metodu ile sa\u011Flanmaktad\u0131r.  \nDi\u011Fer i\u015Flem tipleri i\u00E7in \u0060StoreType\u0060 alan\u0131n\u0131n de\u011Feri \u0060\u00223D\u0022\u0060 yerine ilgili i\u015Flem tipine g\u00F6re g\u00FCncellenecektir.\n\nSecure i\u015Flemler i\u00E7in kullan\u0131lan:\n\n- Hash algoritmas\u0131\n- Key\n- Random number olu\u015Fturma\n- Inputlar\n- \u00D6rnek ekran g\u00F6r\u00FCn\u00FCm\u00FC\n\na\u015Fa\u011F\u0131da verilmi\u015Ftir.\n\n---\n\n### \uD83D\uDD39 Random Number Olu\u015Fturma\n\n- \u0060Random Number Olu\u015Ftur\u0060 butonu, algoritmaya g\u00F6re bir random number \u00FCretir.\n- \u0060Hash Hesapla\u0060 butonu, arka planda hash hesaplama i\u015Flemini \u00E7al\u0131\u015Ft\u0131r\u0131r.\n\n\u0060\u0060\u0060csharp\nprivate static string GenerateRandomHex(int length)\n{\n    const string chars = \u0022ABCDEF0123456789\u0022;\n    var sb = new StringBuilder();\n    using var rng = RandomNumberGenerator.Create();\n    byte[] buffer = new byte[1];\n\n    while (sb.Length \u003C length)\n    {\n        rng.GetBytes(buffer);\n        char c = chars[buffer[0] % chars.Length];\n        sb.Append(c);\n    }\n\n    return sb.ToString();\n}\n"
  }
]